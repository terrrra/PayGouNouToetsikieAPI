// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PayGateDotNetServer.DAL;

namespace PayGateDotNetServer.Migrations
{
    [DbContext(typeof(PayGateDotNetServerDBContext))]
    [Migration("20230719184525_IntialMigration")]
    partial class IntialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.2.20475.6");

            modelBuilder.Entity("PayGateDotNetServer.Common.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<double>("MonthlyFee")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("PayGateDotNetServer.Common.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("PayGateDotNetServer.Common.Models.CustomerAccount", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId", "AccountId");

                    b.HasIndex("AccountId");

                    b.ToTable("CustomerAccounts");
                });

            modelBuilder.Entity("PayGateDotNetServer.Common.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("CustomerId1");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("PayGateDotNetServer.Common.Models.CustomerAccount", b =>
                {
                    b.HasOne("PayGateDotNetServer.Common.Models.Account", null)
                        .WithMany("Accounts")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayGateDotNetServer.Common.Models.Customer", null)
                        .WithMany("customersAccounts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PayGateDotNetServer.Common.Models.Transaction", b =>
                {
                    b.HasOne("PayGateDotNetServer.Common.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayGateDotNetServer.Common.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayGateDotNetServer.Common.Models.Customer", null)
                        .WithMany("customerTransactions")
                        .HasForeignKey("CustomerId1");

                    b.Navigation("Account");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("PayGateDotNetServer.Common.Models.Account", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("PayGateDotNetServer.Common.Models.Customer", b =>
                {
                    b.Navigation("customersAccounts");

                    b.Navigation("customerTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
